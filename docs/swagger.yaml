basePath: /shoe-shark
definitions:
  req.CreateContentReq:
    properties:
      description:
        type: string
      isPublic:
        type: boolean
      location:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  req.UpdateContentReq:
    properties:
      contentId:
        type: string
      description:
        type: string
      isPublic:
        type: boolean
      location:
        type: string
      title:
        type: string
    required:
    - contentId
    - description
    - title
    type: object
  req.VerifySignatureReq:
    properties:
      accountAddress:
        type: string
      signature:
        type: string
    required:
    - accountAddress
    - signature
    type: object
  res.ContentInfoRes:
    properties:
      accountAddress:
        type: string
      contentID:
        type: string
      created_at:
        type: string
      description:
        type: string
      isPublic:
        type: boolean
      location:
        type: string
      title:
        type: string
    type: object
  res.GetNonceRes:
    properties:
      nonce:
        type: string
    type: object
  res.UserInfoRes:
    properties:
      accountAddress:
        type: string
      email:
        type: string
      username:
        type: string
    type: object
  res.VerifySignatureRes:
    properties:
      token:
        type: string
    type: object
  util.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
  description: shoe-shark-service API
  title: shoe-shark-service API
  version: "1.0"
paths:
  /api/v1/auth/nonce/{accountAddress}:
    get:
      consumes:
      - application/json
      description: Get Nonce By Account Address
      parameters:
      - description: Wallet Address
        in: path
        name: accountAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.GetNonceRes'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      summary: Get Nonce
      tags:
      - auth
  /api/v1/auth/nonce/verify:
    post:
      consumes:
      - application/json
      description: Verify the provided signature and return a JWT if valid
      parameters:
      - description: Content to verify
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/req.VerifySignatureReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.VerifySignatureRes'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      summary: Verify Signature
      tags:
      - auth
  /api/v1/content/{contentId}:
    delete:
      description: Delete a content by ContentID
      parameters:
      - description: Content ID
        in: path
        name: contentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a content
      tags:
      - contents
    get:
      description: Get a content by ID
      parameters:
      - description: Content ID
        in: path
        name: contentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.ContentInfoRes'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a content
      tags:
      - contents
  /api/v1/content/edit:
    put:
      consumes:
      - application/json
      description: Update a content by ContentID
      parameters:
      - description: Content to update
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/req.UpdateContentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a content
      tags:
      - contents
  /api/v1/content/list:
    get:
      consumes:
      - application/json
      description: Get a list of contents with pagination and filtering
      parameters:
      - description: Title filter
        in: query
        name: title
        type: string
      - description: Description filter
        in: query
        name: description
        type: string
      - description: Account Address filter
        in: query
        name: account_address
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/res.ContentInfoRes'
            type: array
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: List contents
      tags:
      - contents
  /api/v1/content/save:
    post:
      consumes:
      - application/json
      description: Create a new content
      parameters:
      - description: Content to create
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/req.CreateContentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new content
      tags:
      - contents
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get User  By AccountAddress
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.UserInfoRes'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                Msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get User
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
